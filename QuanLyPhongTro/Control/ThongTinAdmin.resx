<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapNhatThongTin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAABLgAAAS4AcOmL8MAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEL0lEQVRYR82XfWwTZRzHe+11R+fadUD20qkd2Rt0Y3MgwpbNKWXYwHiJbjrZ5hxhsogDtokDsmKn
        QMnEZZQZyIKwMDEqMWqM0RBjMCYuUYkaE/9AVJgz+oeZ0QTUP+Dr73nwmvbuueuYI/pNPnnu2t79Pvf0
        eZ67s2hiJfKJxTNIDjGlpNok6RNqMdNIkvQ2tTJhml4CW++twFDDmsQ82oChzS0Jab6nUhVpZkXMclKR
        5WtXIn2YEiMRXDl9IiHjL0ZUgb28iklGHXb7VWExEVMUmDh+WBX4mOgg0ghhborA10P9qgDHapUmqJ1L
        6JJQ4PKhEE63bUBr+SKsLVuI9sByvBfqERZW+SpygBdekpuJV7etUUWCrKA2pgI/HtiJqlxv9EpcihLd
        ritfgsmXh00FyvM9+OulTsyyy1dp/yShi6EAu/LqvBxYJQltvkKcq1+H8a4n8NmOTtTdUcILsNGeSODP
        0U4kybZrtH+CFdTGUOCN9iZ+ko0LCvBdUz2HCUw8u4cT8M1ncx3nBvYaCnjnutARKOPbBBuMuhgKtFfd
        xQ8ce6BWKPBmWyv/PvzIQzqBLw6F1aIqPxMOQhdDgfqyIig2G779p7hW4POebn7y7vWrdAJqD6SmuHFn
        4fULIVoJXQwFulZcX83eXxsQCpxqaeTfD25qNhTw5RTjnf4PINtkNgaOEboYCnz05GOQ6CQrb8uO9oIq
        cDHUi9JsD2gVxTdHB0wF3j14FopdYbNglFfUxFCAweY+/QaVWRkY9d+NsU0tGGlqQIkni38eevh+XXGt
        QGT7MN8m9hG6mAr8Pvg0tlQvBd0x1ZNwFLsdzzTW4fJrx4UCX2oGIc2WP6gV3qJNBRg/hHtwZttGBFcv
        x+M11bzwh/uD+GnkBWFxhtoDsj0JSnIK+/8ZFaygNkKBXw72IlTrR84cd9yVaPHR+GCD8LdXjgkF5pUs
        RfjMeUhWKxMYJHTRCZzv64IvK52fYEGaG+1F8/EU3QMYu6oqsHuln9NWsYwEZ/PfVfoK4nokVuDwp5Ow
        K46pDcLJ54Mo9mQgieZ/P631sWuAdhoyLvUFsavGz1fEFaVF0TERK/Dc2Ut0N+RL8RCvqEmcQHj9ffzA
        /csWxxU2ElDZWl3FjzvVvSVOwDknHZ68Ilac7dcQusQJsK6f53LiAg20GxG4sGc3XI5ZCCwq5QLfDw9y
        AQb9/+PUbmbFRIkK/DoQpK60oLEgV1icYSTA8BfmI9OdygVinoiEcz82UYGL+3bwgzoW+oTFGWYCD5aV
        0vogT1+ADUA2+LzOFKzy3ipkdUEeaot9QjKcTmTPTpu+AOPIhnW4PS0Vbvo/hSQ74L4lWUhuZjpe37n9
        3wkk5Mafiv//Av/5i8nNfjVrYkXM4qJldIxa9YAZg877FrUJX05Z6MHHkkeIXrOni5cwiMXyN//TzSKV
        PJZKAAAAAElFTkSuQmCC
</value>
  </data>
</root>