<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapNhatThongTin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAE
        sgAABLIBmNLkLwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQ0SURBVFhH1Zd9
        bBNlHMd/T3vdrXPtOkb20okd2Rt0bxacsGVzShkuMF6im062OUeYLOKAbeKArNgpUDJxGWVGsyAsToxK
        jBpjNMQYjIlLVKLGxD8QFeaM/mFmNAH1D/ia54Fr2ud6bQMjxm/yTbq2d5/PPfe7W48oMiYiKiSipXPY
        PIlhmDQzY58REea6jLF3iUiRgXIG+Ze33VONsZa18ftIC8a2dMRt+901mki7DJTzsqooVy4Fh5BQJ4K4
        dPJ43E6/FNQE9slAOZNWi+WyDmTUBAVmjh3RBD4loh4iSpfBWm6KwLdjwxHzYDKxGSKaL8N54gpcPOzH
        ya6N6KxagnWeMnQ3rMAH/gEdNLzfBA8KcGV+Nl7fvlYT8clwnpgCPx/chdp8V+hI7Koaet1UVYnZV8d1
        8HCBqkIn/nmlF8kW5TKfNxnOYyjAj7yuIA8mxtDlLsaZ5vWY7nscX+zsRdPt5QLAp12GywJ/T/YiSTFf
        IaLjMpzHUOCt7jaxk02Li/BDW7MoF5h5Zq9og3sRv9ZxZmSfoYBrvh09DR5t1fgw6mIo0F17p9hw6v7G
        qAJvd3WKzwMPP6gT+OpwIHSqrvVXIrLKcB5DgWZPCVSzGd9fg8sCXw70i533b1itE9BWIC3VgTuKrx4I
        EXXKcB5Dgb6VV+9mH65riCpwoqNVfD66ud1QwJ1XiveGP4JiVvgMHJXhPIYCnzzxKBgRVi3IDa2CJnDe
        P4iKXCdURcF3L47EFHj/0GmoFpVfBZMynMdQgJdf+3xHNTlZmPTehanNHZhoa0G5M0e873/oPh1cFgju
        GNdOwX4ZzhNT4M/Rp7C1bhnMjIUPFFSLBU+3NuHiG8d0cN6vpSFkjP1l9C86pgDvT4EBnNq+Cb41K/BY
        fZ0Af3zAh18mnteB5RVQLElQU1L5+eetluE8UQV+OzQIf6MXeRmOiCOR616QK4bwj9eORhVYWL4MgVNn
        wUwmLjAqw3l0AmeH+uDOyRQ7WJzuQHfJIjzpKRPdXVuNPau8ol3Vy5GXMU98r8ZdFLEi4QJHPp+FRbUm
        NoSzz/lQ6sxCktmM4arKiHuAfBnyXhjyYXe9V9wRV1aUhGYiXODZ0xdgMolb8ZgM54kQCGy4V2x4YPnS
        CLCRgNZtdbViuxP9WyMEbBmZcBaUcDj/u16G80QI8KVfaLfhXGuTDh5L4NzePbBbk9GwpEII/Dg+GpoT
        ZjJNE9EWGawlJPD7iA+MEVqL8nXgeAK83uJCZDvShEDYL6Ko1354QgLn9+8UG/WUuXXgRAQe8FRAtSjX
        L8AHkA+fy5aK1a5bo3ZNUQEaS91Rm2WzIXde+vUL8L6wcT1uS0+Dw5ocvSlWOG5Jidr87Ey8uWvHjQnE
        bYI/Sv9XAv/5g8nNfjRrk4Fy7IyxKe2mMZdljL2TyMMpDyOigiiP2DdSlwwJz7//080irdN7MgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>