<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapNhatThongTin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAE
        swAABLMBSpUGywAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQvSURBVFhHzZd9
        bBNlHMd77XVH59p1QPbSqR3ZG3RjcyDCls0pZdjAeIluOtnmHGGyiAO2iQOyYqdAycRllBnIgrAwMSox
        aozREGMwJi5RiRoT/0BUmDP6h5nRBNQ/4OvvefCa9u6565gj+k0+ee7a3v0+9/R5nruzaGIl8onFM0gO
        MaWk2iTpE2ox00iS9Da1MmGaXgJb763AUMOaxDzagKHNLQlpvqdSFWlmRcxyUpHla1cifZgSIxFcOX0i
        IeMvRlSBvbyKSUYddvtVYTERUxSYOH5YFfiY6CDSCGFuisDXQ/2qAMdqlSaonUvoklDg8qEQTrdtQGv5
        IqwtW4j2wHK8F+oRFlb5KnKAF16Sm4lXt61RRYKsoDamAj8e2ImqXG/0SlyKEt2uK1+CyZeHTQXK8z34
        66VOzLLLV2n/JKGLoQC78uq8HFglCW2+QpyrX4fxrifw2Y5O1N1Rwguw0Z5I4M/RTiTJtmu0f4IV1MZQ
        4I32Jn6SjQsK8F1TPYcJTDy7hxPwzWdzHecG9hoKeOe60BEo49sEG4y6GAq0V93FDxx7oFYo8GZbK/8+
        /MhDOoEvDoXVoio/Ew5CF0OB+rIiKDYbvv2nuFbg855ufvLu9at0AmoPpKa4cWfh9QshWgldDAW6Vlxf
        zd5fGxAKnGpp5N8Pbmo2FPDlFOOd/g8g22Q2Bo4RuhgKfPTkY5DoJCtvy472gipwMdSL0mwPaBXFN0cH
        TAXePXgWil1hs2CUV9TEUIDB5j79BpVZGRj1342xTS0YaWpAiSeLfx56+H5dca1AZPsw3yb2EbqYCvw+
        +DS2VC8F3THVk3AUux3PNNbh8mvHhQJfagYhzZY/qBXeok0FGD+Ee3Bm20YEVy/H4zXVvPCH+4P4aeQF
        YXGG2gOyPQlKcgr7/xkVrKA2QoFfDvYiVOtHzhx33JVo8dH4YIPwt1eOCQXmlSxF+Mx5SFYrExgkdNEJ
        nO/rgi8rnZ9gQZob7UXz8RTdAxi7qiqwe6Wf01axjARn899V+grieiRW4PCnk7ArjqkNwsnngyj2ZCCJ
        5n8/rfWxa4B2GjIu9QWxq8bPV8QVpUXRMREr8NzZS3Q35EvxEK+oSZxAeP19/MD9yxbHFTYSUNlaXcWP
        O9W9JU7AOScdnrwiVpzt1xC6xAmwrp/ncuICDbQbEbiwZzdcjlkILCrlAt8PD3IBBv3/49RuZsVEiQr8
        OhCkrrSgsSBXWJxhJMDwF+Yj053KBWKeiIRzPzZRgYv7dvCDOhb6hMUZZgIPlpXS+iBPX4ANQDb4vM4U
        rPLeKmR1QR5qi31CMpxOZM9Om74A48iGdbg9LRVu+j+FJDvgviVZSG5mOl7fuf3fCSTkxp+K//8C//mL
        yc1+NWtiRcziomV0jFr1gBmDzvsWtQlfTlnowceSR4hes6eLlzCIxfI3/9PNIpU8lkoAAAAASUVORK5C
        YII=
</value>
  </data>
</root>