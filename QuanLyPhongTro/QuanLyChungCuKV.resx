<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLoad.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADgUlEQVRYR72XWW9NURTHzxdQHwGdbk2REENJlGeCSHggxggiQSLxggetITyg9962OulgalU6aLXV
        JsQUOsTYyfjc4iNU/a3/2efcM+07SWsnv5uz91rn7LXXWnvtuw1dy40iLyuCc9kRDAoTwh8BacJ3JnIi
        GMgKoyhUjJD1+fgtswKzs8Oolhd/uz40XfCbVUKGNZ235V3DXBGOWMozyfC8EsyxplUtdBmzRDDkU0yK
        uBfLKvWyJIzR29b0hmG5XacYl6JnQMdnoOYd8OgbsLNZrxePnCgqzMmZcDKQVswPdQAXnjv9UBRoHgXW
        1Hj1kjCZWYJcQyw5rxHGoJvX1wNLyp2xphE1qVtv+33g9GPvWAoUGvLDraYTYuNdoEfcG+4DGoeB0gE1
        nooBlPt1NPTTgF++QRMJjTn5wlJn7GQvcLwbOCghuPjCGQ+VAC1jTgj2tALdX4EuYW+bo6fhBw2Y8g2a
        0O3FsnL3WJ5MRE/wufCpk4ScbIcrCds+qQWQVjHMHtcwRQN0AjPmDUPesXV1wPVBpx9vG9IoGkT47Je7
        iWsAYczpdq68QCZnSFbf0Ou6WVSmtinhs07HJqEBhDGn28tk5fkpTJ4uWgNo9T5JHiaQOwlngoABK6qA
        3u/AiR4F3b5cxvx6qcKtXPdeJS13i18eMKD6rYq33WfiVb3x6qTK0gq1FZmo3LpXXwd1AgawpKYylgpb
        GlUi2n3ddwIGXHoJ7Gpx+rulqLiLTjrMl/xhCI90Ks8ek4T26wQM4Ja7/VHVAHLrgz52qbJYEvrwQ2DD
        Hb08YIANXyQ62XQS1wCbTQ3qMDolBw1dqtPRkV8NrBJ0MjcJDeChclNCwF3ButAutZ/1Xafr5soroF62
        HuGzTseGBmgPI8KsdR+pzOit97w6frhqTmz3+ZzAE+Zh9NM3GCORAUzMM0/UBPsfODp+A1iEEhgwbvB/
        u0ZgQrfzY2trVTh4/Noh4Cl3oF2dmsyRo13Oe+4Q6IpPjCj6DF4atEKLzZKEkX612gWuJHQXFR7L/iLD
        VSdYuSKMswZvLNJJ+yLS+cWpDwXiodok574G9aeUTTq8seiU4rKtSVU5hoL1fmWaB5Zc/crNydn++8Uk
        ilHPxYSN1yURDgeUp5+hwNXMbiLMECqFSUt5Opmk2+lta7r4jckhLxQK/cK48K/X83FuNWZ7LOE8zTD+
        Ai+8hsKdbzrwAAAAAElFTkSuQmCC
</value>
  </data>
</root>